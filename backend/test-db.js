// Test de connexion √† la base de donn√©es et cr√©ation du mod√®le Availability
import mongoose from 'mongoose';
import dotenv from 'dotenv';

// Charger les variables d'environnement
dotenv.config();

const MONGODB_URI = process.env.MONGODB_URI || 'mongodb://localhost:27017/sailingloc';

async function testDatabase() {
  console.log('üß™ Test de connexion √† la base de donn√©es...\n');

  try {
    // Connexion √† MongoDB
    console.log('1. Connexion √† MongoDB...');
    await mongoose.connect(MONGODB_URI);
    console.log('‚úÖ Connexion r√©ussie √† MongoDB\n');

    // V√©rifier les collections existantes
    console.log('2. Collections existantes:');
    const collections = await mongoose.connection.db.listCollections().toArray();
    collections.forEach(collection => {
      console.log(`   - ${collection.name}`);
    });
    console.log('');

    // Tester la cr√©ation du mod√®le Availability
    console.log('3. Test de cr√©ation du mod√®le Availability...');
    
    // Importer le mod√®le
    const { default: Availability } = await import('./models/Availability.js');
    
    // V√©rifier si la collection existe
    const availabilityCollection = await mongoose.connection.db.listCollections({ name: 'availabilities' }).toArray();
    
    if (availabilityCollection.length > 0) {
      console.log('‚úÖ Collection "availabilities" existe d√©j√†');
      
      // Compter les documents
      const count = await Availability.countDocuments();
      console.log(`   Nombre de documents: ${count}`);
    } else {
      console.log('‚ö†Ô∏è Collection "availabilities" n\'existe pas encore');
      console.log('   Elle sera cr√©√©e automatiquement lors de la premi√®re insertion');
    }

    // Tester la cr√©ation d'un document de test (sans le sauvegarder)
    console.log('\n4. Test de validation du mod√®le...');
    try {
      const testAvailability = new Availability({
        boatId: new mongoose.Types.ObjectId(),
        startDate: new Date('2024-12-01'),
        endDate: new Date('2024-12-07'),
        price: 150,
        notes: 'Test de validation'
      });
      
      // Valider le document
      await testAvailability.validate();
      console.log('‚úÖ Validation du mod√®le r√©ussie');
    } catch (validationError) {
      console.log('‚ùå Erreur de validation:', validationError.message);
    }

    console.log('\n‚úÖ Tests termin√©s avec succ√®s !');

  } catch (error) {
    console.error('‚ùå Erreur lors des tests:', error);
  } finally {
    // Fermer la connexion
    await mongoose.connection.close();
    console.log('\nüîå Connexion ferm√©e');
  }
}

// Ex√©cuter les tests
testDatabase();
